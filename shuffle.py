import os
import random
import time
import bigram_utils  
import counting_fitness

#cipher_text = "DMYERA LPAMRE OSTNBI IELEEV ATHTRP CINELA RBETAM LYARAE HDYAEV IWRTET ONTYUO NCOCRE NNIGHT MISATT AERNID AAMLTI ETLEBM RARASS TEDORW EITTIH ESLTET TRAALL TBUIOH YPEOWU LILUDN SERTNA FDIIDN SMYEFL TATHME CERYFO OTWSRT GONWLI DLEWMO WENHAO USSRME HETATT SHIMTA RTEIUS ERGNYT HOUAEV RALEDA EYBEIN ONFREM BDAOTU ROUUEN EXPCET UDGETS SMISAW ERNWOH RARIEV ADLSWT KEETOO AURSOT SNIHEM ONTNHT TESEMA ISHPAP FCIISC IHESLA TITLCE AOYBUO OTHWHS FEAFRO DDETEH UJOREN NYADSI PUSETC ATHTHS IEMGTH VHAEEB AENSOT WWAAWY LHIEAI NMICIL DNETDO LEASRT GONLWY HITTAH ATMTET HRTEOC TUNESS SHAEPX SRESDE ETHEUQ LALYTS NROGIV TEWHTA SWEHUO FLDISR DTADER TSSHRE SEAOSN RFOMSI ASWREN ISVSTI VGIETN SHEESN IITVTI FYOTEH TMATRE ESDSRC EIBDEB WLOIHT KINSEH PISRBO LABYIR TGHMSI ASWREN SHADTE MERIEN HDTATT MHEYTS IEROSU LBULTE SWAMNA AUFCUT DREBTY IHEMEP ARILRA CMSOPM YANWIH ACHSOY NUKOIW WSONDE JBYUIL KUSASI SERPNO RSOOTF IHENID AAPVLI NIOTEH LBULTE SWADSE NIGEAD NSAOEV YLTIET OMTBDE TISRBI EUTDTA ETHEHX IIBTOI INWTTH EHENRG EAVDEL ETTRDS OENTNI HGTEAD OTEFHT XEEHBI IITOON NPEIGN ETHDTA AEWSNE YCRPET HDTEYC EPHRNI ITHSAC BSEENI RGAAHT SERIPM CLEASE SARHFI STIUPP EOSKIA RSEFLE HTTATT SHIWSA TRAHRE ECLVRE OTHUHG SITEME NSAOSB RCUEAW OYTMRA TKEHSI MCOPNA HYTAPT HERASP AISMRA FKOTEH NMASHC AARCET ERHFNA ECISIH EMSLTF CHELVE EERSMT IANNVE YERROO UMBTEH FISUDN GINTEH VPAIIL AONNID STIIPM TORATN ATHTEW NDOOHT GINTOO EFFNHD TIMHTA SDICVO YERMGI HHTAEV OCLSDE ETHMTA RTEADN AIWSNI ICLNDE STOHPI ETHSMO HEWAOT RVEETN SHUISA CTIMSI ASWREN CBAKOT RHEHMO NEINWE RYOKOH VWEETR CHEONU STESAH ESPRUS EADDEM ATHTYM IINTAI MLIPER ISSOSN RWEERP UEJDCI LIAADN ETHRDE SOESEE OMTBSE EOMTIH MNGOER TTOHSI FAFARI SMISAW ERNFUO TNDHBE LULENT TEXTAO ASTCOK EFSAEL RDCAET ASMREK IDWTTH LHEOOG TOFHME UANFCA RTUETR YHEHDA EBENHS PIPETD RHEERF COMHCI OAGTEH ACRTSE NCOTIA DNERFI SLEADN MAMUIN OTINED LVEOEP YDBTEH MCOPNA OYFRHT LECIAM ITENHT UESBOC INTNNE HTTEOC AMPNIY OSHPFE TULHTA ETHBIR STIHOG RVENEM ANTNTD EHEIWC LOUDOB BTHENI RTEETS IEDNUP HRCAIS TNGHME ATHTOD EESXLP NAIHRE ARKIES IRSNET SRETNI ETHEHX IIBTOI TNIWLI CLATSA AAMREK LTPAEC RFOHSI WNEWAE NPOSUB LTASAO PNOPRO NTUIYT CTOURR AYFVUO IRWTTH PHERNI GCEIEV INHSNI UFLECN IEWTTH GHEOEV MRNETN ATHTIM TGHIPM VROEIH HSCACN FEOWNI NNIGCA TONRCA ITMSWS NAREWS REASHT TATHCE TRAEHS NADOBT NEETMA RPEEWD HITTEH MCOPNA EYSASL RWEENI CTATIW ETNSES YDBTEH OPHTGO PRAHBS UROGTH MBYISS RWANAE INDTSI TNOCEL HAROOW HRWYNO FEOTEH LBULTE HSSOLU ADHVEE ASCPDE ETHMTI ESEMPS SOSILB HETAET HITEAR VRIAML UANFCA RTUEOR CRARMI AINLAG MNGAHY EAVSOT NLETEH NCOTNE OTSFNO REOMRO FEOTEH ACRTSE MSOEOH AWMNGA GINTRO EESATL MHEBTU ALEVNI HGTIOS SNEMLA LLCUTE HOTERI TACIIV ETISNI ITHSEW YMAHVA EEBELN KUCYFI ETHSIH EPMNHT AADPEP EARDOT DBEEIF ECINOT RNARVI AALTHT XEEHBI IITOIN OTWUDL VHAEEB DENIFF UICLTT SOETBA SLIHHT TATHTE FHETAH CDOCRU DREITN UHESEW GMIHTT NHEHVA EEBEAN UCCSDE COFAER SLESEN ISSNUO ARHNLD GINOTF CHEOSN NIGMNE TTIHNI TKIWUO BLDENI ROUBSE NTITRE TESSOT AEXMNI HETEOC AMPNSY ACRTSE FBEOER ETHYEL EAVTEH ISHPHW HICARR EIVDNI VLIEPR LOOERA ELIRHT WISEKE RFOTNU EATLTY CHEURR TENDCO OKWREK SRSSRT EIKHSA LDEAEY NDULAO NDIGOS SWEHUO HLDAEV MTIEOT MCOMSI OSINFA LULCEH OCKFHT AECROG FBEOER LITADN FSIAYN ITHNIG MSAISS ETHNEW LWILEB LABEOT SASUER KMRASI TERHTA ETHISS AUERSO EEBFRO HETERC EATSER HACEUD ASIMWA EAROTF SHEESN IITVTI SIEITN SHIMTA RTEWTI HHTEID LSPAOY HFTEOK NHIORO IATTHS REATHT NEIDAI VPAIIL IONSEV DRYERA BTOOHT ETHPIR ENCADN RHEMJA TESYHT UEQENE WITOLU EDBMSO MTEBRA SRASNI FGIIST IPRNIC LPASOP ONSREH KRRASI SERHUO FLDELE ATHTEW EARNTO FAFODR GINHMI EEVRAY ISSSAT ENCIHN OISWEN ENDAOV SURWTI YHMVRE EYBSWT HISEBS BABAEG"  # Replace with your full cipher (no spaces)
#cipher_text = "AERDM YLREA CHETH ASKTE URASC DOERN DEIRV EAESR NGDDI NEADN BARTY LAEAR OTTEB LFATK ALREJ HEREN YROUS EHCON RDEAE HREEV COMDY NDAHD AIMAN UDODF CAHRH EOEFG ANHTI OCLDE IWNGS SEUSC DRIED HEVRO SCTAL SIEHT SGENA SMIHE HTOTO SFTUH UGNUG OLYNA AMWOR ERHND SHPGO UAHNC EENNE ADMSI GDRSA EKSUI YEENE ESAHD ANNIT PARCE TLELR POESH DEMDV IHTTI EWLOL FHEGN DIOWL ISAET ECRNC OHGEN NIIAS KRRRA MSERP IMHSS TIITE NPMRO SCODF EISTS YOTWF OCSLE TEHTR ASRTI EFAGN NLORR OADNH CCAWE IANTO NISXG INELS FRIFU ANMAE RDUCT EHITB YIRAE MPSMC RLANA YPOMU GNETH PEARS AIDNE CKWAA RSTOR TPNDD EWTEC MAIHI TLAOR NESUT RILBI IHINA KTRTO OMRSE IDETS EUIEN EOSSN SUGGE PDPHI LALTI NDNIA OWKNI ITHTS RENJK REAEM TATHD TAWSS HINOL ETHEW LEYNT NIEEM MEAHN TCATF NUFOT EURNU SGHEO NTOID LALCR EBSEI THEMN GINEN DOTIR ERHBY ESRIK AHTET BUSIS TNITA RHUCL APIIV TTHNO IEHRT EOETS ACRIE NRWET SYETH TFEOL ESETH ACHCC ASEIA NTONW TOGIN RDENH UEXSO DBRAT COFEG SDRIS EKTKA EHDCE TOCNE THSTF NTEBE UMORR EEHTT TOHNI SERMG INBAL KARUO TBEAE MXETH TTHPC EBMEU ENLIL WRIYW OOSHS EKHUT EHSCE TYNOE WHIST IUVEH YTASO TOEAR EGTRL ALCON OEEHS TSEOS FLEAR EAVSE HTEFL OETSA CREBE DHAOM VENRR OIFED CETPN SYBTN IOSUT CHEFO FSOML ASIIC TOHDA NAHDS ERSNU EBEUQ EEBSR YELNT DEBVM OWEAH YTUOS HREFA FTESE HRTAT SETUE QEHCT OFNAY POMAS LITHD EKWLO OTIEA TCETP NSFOT LALNA DMHEP SEESH INGAN TMEOR HTAGL NVICE OHLTT NSENT HCEDA NGNTI CKAEC MHETA ERHCA TINCO HTEDN ENEUM SAORF EMBSE AXBOC AHEND OCNXB OENDI TAASM ETHBM EUENA CRFRO GDEIT RTOER SPWDI ECTIM NATHG LRAER AEGSE ANIPN AIREE FREOT TENCW OELAL OBXHA CUFLS WAAWS SLACH RCEAO SIEAT KNWIT HBNEA ECTEH RSUTO HNATA HDGIN TNAEB EERDE MPYHO TWIRN EAUCR UESAS EMRLP ATNHO STEHR TATON RSEIN OFSEA NOCCO RBAON EREHS TUTIR TUECH TEFYO MPEIS HNUDI NTATN SERTA IHDTL ARSTI OYNDE AAWYS ITEHE TTOIB TIXHC ACNIO NAIPO MSYTB EDRFO FAFEP RMMIR AMLIA DIADS ITAEK SKTUT OABNE TGHEN AWMLE DABHH OPSIN EETNH IEDIC NIEVF OTYIT RAEWH EESBU HOEHH SUTTI TLADA ODTLE RATPD ATMHO FRTCT AEFEH WTHAP AEEOR AIRLC UNIHM GERUB TISEB LIANT EHVIE RAEEE SNWAO KNPRE ASSNA DSCHN ATCWE TIFEA KHTIM ROCSR ESDOI NTIPH TEATH NIFSW ASAIT ACTOA NKHUD ANHIL UICPE YTLIA RTNHI AYTCT AEFHT ETHAA SDMGE NIGNO RREEW ITLBA LALOD NICKI HNTOT HEAHK SRPEP DAETD ACIUF LETHN GIILS NACCF ISEEH ETROA CDESN AOTIL NYORE BNYRW OESOO THAYL OFREC NSDEU OLWTI NIKHD TEMRA ITIRO UECWY ETSIN TOIRE TRHOT FTCTA EFHTE THATA DEGRN ODMIA PLLLW ICUHS AYNGI IASNA TCFII ENLRO XEHET HITOI IBONW KNINT OATHO LFLTA ISKET HREEW HSVAO FINMF AOURJ AARHA ELEUH DGNHI PSNGI ASMNE TCFIT TOFGI AMJRH EAYNT ESLIE HDWNN OAICR PETTA MTANS EOCNA KEITO CNEWT EENBE HKTEN ONOIO HHDEN RAIAS KRRMT UIERL TEAST EBPTA SBILS OSTAT HETIE SRHEA MYEON UQEEI RAHTT STOCN UYOWT ILSUL AMPTH OTNSE RIHST ONETR TMANA YEARS ISHOF FFAFT AAIRL MITHH TWITN LEEGS NPAEM NILDI EPROE IVDNA AOLEH STREI RTUEC VRIEY SOCNS CENET DFITT HATHM AOIED LILWN DFAES BESHO TWIQY UNMAO INTES SIIRS AORMF NGSER TKATR IOEPT LHEFE OEUWA TOTTT GHLAI EAKME OLTTR AECRE RUCOI NNUIM OMOIN TCAMO TRSFI TMSHI AMYNE OEKTA ITBIE LHEFO SYRTS ETGUG HTAGI NRURO TYSYH LEPBD ELOUR UECSE HTAID WNEEG VIPIH CREIS NUERE PRYGM LAKNS OOLOI EYWRA OKFYO OTRDP ELRUR LAWSY ADAAS AY "
#cipher_text = "MBDED RAGAI DMSRR RBFOU THHDE OAYLN MBRES LYLHA YEFRU NGTHH LAVTF HWDDY SUEMD RKDBL BBUVY BHFOU EIFOU ODRHS PRNDW OYRUR OETWE RLWAV CAOLE GTOZH IWEHD LLSLA FETRD EDLWL THDNI QCIGE NWTHD THDDO FCUUR EGATN AIVER VLOGG IQGSD YOXNG ZOMDN HDDBH ENDPP UEHHN DHDOX TSLDE WHESR OSERW YCDRR BINJA LDRGH BAJIN ZHIFH WHREI OUQDP KOTRG RDPHL CETUI SMEQT AQDPO ATHSN RTBHL IHVIQ GHHRS WORBO FEEIQ GAMOU UNAOI SWANG REFOG QISLN GKERD CCHNT DSAPE RLCAQ THHCO QSTDB LHPLD CEGHE UUNGE RDRRH STIOR WUNDT EOYRH COJNI VINJT HHPOW ENWIA OFOUA DLPLR MAWIC LNCLD EQTHH TRDNS SORWE DWHEV USSEC WTOKE AGQUD RTHRS ZHEUE USONV HEUEQ XESWE DWHAW ISKOU ODBHC AOLEG IAPST LLLXN COEAU WHDTP UOMST EGMIV SWDRN HINKE RDCTL ONVBU WSHHC LHARO YBHLI HVEVT HDTHH RRNAI VERKA SVOMH THLNG WOHLD EDNDD PPDRE QTLBT ORKIW UPRNH HRSHL FWOBU EANIN WOHLS LRDGH ANGTO WAKHP HRTOJ RASHS RFDRC UPENW SSKEF RUNGT HHREV HEDPP DREQT LBBOU ROZED WHEHQ ULPMH NTIRO PWHHA TVTOQ EWKOH DSBHE NHXPH RIPEN WINJW IWHFD STHRE APOVU RHIMD GIQGW KATKE TKOUJ HTKEW DSDRI NJIND SSLST LNGWH EBOUQ GLDDY LAMDT AOOSV TOHXP OAIQM IVSWD RNHSE HMSWO PRSSH SSDCH DRMWH AWISO OSWON PEBXT WKICK PEUSU DDEVO TKERV TOMOI QHEUI NKERP ADDDV HNTXR EVTHH DEOAY KASEE EQCAX SEGIN SARWB YWHEQ EEGTO SROFE SVTHH PLDTE VANGT OFONV IDHRT KEIUC OQTEQ TSXNF RRTXN AWELB OUUAM DTEXR PKOTR GRDPH HRFDI LHDTR PRRTE FTTKE IPAGH SAQDT KEYZE RHBAG LYRVE UEXSO SHDIV USSEC WSHHH AGNOW REDLI VEDMU SWHOZ SEQSI WIVHW HHATV TOQES IORPU LDISW HERNL BLEJI BOEPD RTRFA QYOIT HHIMD GEVWA VTHHP HUASH JAQUS SROME CWACF ORGIN JTOPI SVWAU NEWHI VWAVW RLTTH NOQTH HCOYE RRFAI ILHCO QTALN IQGEQ CRBPT HDDRC UPENW SWKIC KSHHH AGALV OAWTE PPTHD TRCOS YIWHA VTANE NDLLP YPHRS XASLO NDNDD NIQTE UVEQT IRNBB PAOME USTRN TRGEW HEURE OEAVE DDNDL AMDFR DIDWH AWTHH POOIC HHAYE CRNFL SCDTE GALOO FWHEH QULPM HNTLF OUESH EAGIS DGRHE AELEF ONYER VATLO NZITK WHHAT VTOQE IQMYQ EAUFU WURHI DRNOW KNRWW KATZE AUETR MANEO ITHLS PDLMH RSWON KASPA DHITF LEDRT KATPI SVWAU NEFAN QOTEE AOLOZ EDWOC RNTLN UHINW HIVIR UESSO NVIBO EWDYS KERLS KVJER PAUDI VINJT HHDEO ICDTE QEGRT IDTIR NSEET ZEEQT HHGOY ERQME QTAQD HHRRN AIVER VCOPP AQYAQ DYHTI WHIQK SKEMD YBHON WOSRM EWHIQ GIDSK HDPDL MHRSW ONDBO XTTKE SLKHZ ITKTH HBLDC KVERS ACKAN GHELM MHDID TEOYK QEWZH OLMED NTWHE JENWL EPANL NQXES WIOQI SDPRL NCHAN GHIJH RDNKL NGRFF LCIDL IQDUO EESSI QGHVE NWOUU AGHHE LSVLS IWINJ THHGR HATHX HLBIW IOQAS WHERF FLCID LRHPR HSEQT AWIVH OFWHE PAHDR AMAHD NDKAS EEEQH EDVIO YIQVO OVEGI NGISF USVIO QSAEO UWTHH DIVPL DYOIT HHDID MOQDT KEMDH AUAJD HIVDE HPLBC OQCEU NEGTH DTTKE GHMSK OUODB HFUOL YDPPU ECLAT HDBBH EUMAM ESWYS VUBME CWSBX TSKAR HSHHR CRNCH RNDTO XRAEI LLTYW OEQSU UEIWS SDFEW YNRTW LSHLN GWOSW IRXPM RRELL LIEEO INJOV HRTKE GLFTR FTKED LAMRN DWHOV EDLSC XSSLO NVHAY EBHEN DTTKE HLGHH STOEV HLAQD IZASQ OTPAD HAWDR ERFTK EMXNT LLNRW PDLMH RSWON ZASDL SRNOW AWDRE WHAWT HHPRL NCHHA GLEIT LRNDR NBXTH HWAVN OWUNG ULBSU UPRLS EGNOU WAVHE DLAUM EGTHD TTKER HMIJH TEEAF ONQEC WIOQB EWWEH NTKEM DHAUA JDHAQ DHHRR NAIVE RJIVH NTKAT WHEOA TWERL SSSON VORLN GWHEL NDLAP DVIOI OQWHL LELAG UEEWH AWWEQ EEGTO FONWI NXEOX RIQVE VTIJA TLONV CAQIA VKYRU POEAV ETRDO BOUUV EUYBH STWOT DMEPI SVWAU NEWHE OITWL EWIMH IHDVE DVALL AELEL SBHTT HRSSE NWCOQ TEPPL DTIQG HHRDL SCRVE UIEVT HDNDH ALLNG ZITKT HHAUW HOUIT LESRN HHRBH HAOFW LTHPY BHSTZ ISKES DSAOW ABSTR YOXAN GYOXR HXSBD NDEAB EAGH "
cipher_text = "PYDHA RFHAU LEVPL HASHA CFEPW MYVIN FERHS TDPOO OGLES IORWH EWROX BLHCA XSEGB YRURJ UEVTI NNOZT HDTYR URFUR UENWT RDVAL LSRCC XPYPO SWOFB OUUTI PEAQD WHARH ALOSO YERBG RDTEI ULWHA WYOXH AYEGL VEQYO XRTLM EWOSX PPRRT PISVW AUNEV HELSI ZILOA DPITX NCRNV HNTLO NDLAW LEDST EYTKE SWANG ARGSO IOUUU SXALF OMSAN BYOXN OGOUE TFLND KERWI RHSOP EWLTH VOMHJ UVTII ICDTI RNGLV EQTHH EFIOR WYOXH AYEHD DTREX SENGI NRRDH RTREX WRAFT HHRFU OMWHE FLUWC HHSOI OUUFR LENGS AWPOO ICHHQ LFHHR AGVEQ TUUES ZERHP UUELB REFRE DTIRN AOTHH NIZOU ODSKA RHYOX RFUUS WRAWI OQBUW SHHHA VFUOL YFONY INFED PETKA TWHEU EIVSO PETKI NJHEU EFRRU VTOLN VHSTL GAWEA QDIPO SWURJ ENWLY EEGBO UWOGL VEWHI VMAWT EUYOX RAWTE QTIRN WKILH WEGON RTHDV EWHES HOWOG UAPKI CHVIG ENFET KATPI SVWAU NEVET RUTWO OETAL NSKEH DSTKE MRSTH XTUAO UDIQA RBGII TOIBE LNGDB LHTOU ECDLL WHELM AJESV HEDTT HMPWE DWORH COUDI QTHHM OVTIQ CRHDI ELEGE TDILL WOXLD QOTKA VHBEO IEYED WHIVC LDIML FIWWE UENRT FRRTK EFDCT WHAWT HHTEA TSKED HSCUI BHDIV CLHAR OYEQC RBPTH DAQDI GONRT BHLIH VEWHA WSHHW OXLDK AVHBE HNAEL EWOIQ VEQTI WIHDV EWAKH NTKEL LBEUT YRFTU ANVCR LBIQG TKEJD NUVPR RJEFT DRCUP ENWAS GICWA THDBB MIVSW DRNHA NGWIO LTXRN PYAWT EQTIR NTRIT VDEFI PKERP ENWAS LAMVU RHTHD TYRUA UETRO BXSYW OAWTE QDTRT HDTMD TTHRW KEAWS TRNEZ ILOBE YISLT IQGTK ISDFT HRNRO NWOTH STRUR QEWWE LHGRD PHLCE TUISM EQTSR IMDYS HNDBO UWHEG ECUYP WIOQT HDTWD YIITH DTIVA GUEED BLHTO BOULN TKEMH ANWIM HIWRU LGBEP OSWGR DTEIU LLFYR UCRUL GSPDR EWHEW IMHTO FONVI DHRTK EFRLL RWIQG QXESW IOQIF WHELM PHRID LAUMS FARJO HDDNR TBHEN VTOOE NWHEQ WHHRE GIDWH EEULO ETFOM HFRRM IFANE ELLEV HTHDT AIEWE ULOET VMIJH TQOTE EMLSS HDIQS UFHAO ARJEC DRGRB UWKAW EIVMO VTSFR USULR USDND FERWA IQTHD TWDSN RTPRS SLBLH THHCR DTEVW EUEFX LLGID KERUK ALSEU NOWNO WICHO RGIDK ENRTC DREDN DLFOS ENHDW KYWHR EWHEF RAWES UESHA LHDPH TTBTH LEVHS AUEUQ LINEL BTOWA KHSUF HTUOU ELERH BXTIQ REUEA GINJT HDTPD RAJRA SHAWH OXGHW HAVOC FURUE DWOMH ITLST ROFDN TDSTL CAOTO VHAUE IQITV INIAN WSTDT EDNDL WIOLN HEDWO PRNDH RIWAL LTTOE BHFOU EIWMA WURHS IQTOV OMHTH LNGZO RWHOI FEUIN JFOUY OXRCR NSLDE UATLO NOETL TSXFF LCEWH AWITK INNTH HANVW EUISQ OTWHA WHEUR KDISH RFDIL HDTRN OWICH ORWOC DREEU TWHAW HEWOO NGRHA TSAIQ STREN VURHT HDTWH WOXLD QOTQO TLCED NDWHE UEFRR EWHAW WEZOU ODNRT CDRES ERKAP VIHDV EVAIG ENRUG KFOUY OXTOF HAQCE DCRRS SWHEV AMHTH RUGKT IZILO BEPOS WINWR IJUEG TOVEE LFYRU DRINW HEPEA QTIPE CRULG IAVKY RUTRM ANETK EFRLL RWIQG EQQUL RYRFY RURFO NWACW SIQTH HCUVT OPSAQ DEACI VEDHP AUTMH NTKOW ZERHT HHCRD TEVIN WHEVH ISMEQ TLDBE OLEGA NGHOZ WEUET KEYLN SSECW EDPAY LCOQC LXDEE YSXGG HSTLN GWHAW WEVHO XLDLN CUEAV EOXRS HCUUI TBALL TTOEI IMYVU SSICL ONVAR HCOUR EFTTK ENKER UKALS EUMAB BEWAK LNGDN IQTEU ESWIN BOUUC OPMUQ ICDTI RNSDN DLTWR ULGBE DPIWY TRALH RTKIM WOOXR CRNCH RNVSI QCEWH EYIGH NEUEC LPHHR CRNTL NUHST RREVI SWATW ACNEV HNBBY OXITV HOXLD SROYI DHALH VEOOF VECUE CBSUL TAELE IORRU RSURS OSHSI VUGJE SWTHD TWHUS HTHHC HDPTH RTLTL HSFUO MWHEF OPSER IIEOD DLSCO OSXRE VFOUK EBSTK OUJHI ZOUOD WHLCR MEBOU UTHRU GKTSR NOXRF XTUUE AURAQ GEPEN WSYRU RVEXF ITHDL BADD"

def shuffle_within_groups(text, group_size=1):
    text = text.replace(" ", "")
    
    groups = [text[i:i + group_size] for i in range(0, len(text), group_size)]
    shuffled_groups = []
    key = list(range(group_size))
    random.shuffle(key)
    #key = [1, 2, 0, 3, 5, 4]

    for group in groups:
        if len(group) == group_size: 
            letters = list(group)
            letters = [letters[i] for i in key]
            shuffled_group = ''.join(letters)
            shuffled_groups.append(shuffled_group)
        else:
            shuffled_groups.append(group)
    
    return ''.join(shuffled_groups)

def divide_into_groups(text, group_size=6):
    groups = [text[i:i + group_size] for i in range(0, len(text), group_size)]
    for i, group in enumerate(groups):
        shuffled_group = shuffle_within_groups(group)
        groups[i] = shuffled_group  # Update the group with its shuffled version
    return ''.join(groups)

def monte_carlo_decrypt(cipher_text, iterations, plateau_threshold=500, group_size=1):
    best_text = cipher_text
    best_fitness = bigram_utils.bigram_fitness(best_text)
    #best_fitness = counting_fitness.fitness_count(best_text)
    plateau_count = 0  

    for i in range(iterations):
        candidate_text = shuffle_within_groups(best_text, group_size)
        candidate_fitness = bigram_utils.bigram_fitness(candidate_text)
        #candidate_fitness = counting_fitness.fitness_count(candidate_text)

        if candidate_fitness > best_fitness:
            best_text = candidate_text
            best_fitness = candidate_fitness
            plateau_count = 0  
        else:
            plateau_count += 1  
        os.system('cls')
        print(best_text)
        print(i)
        print(best_fitness , candidate_fitness )
        
        if plateau_count >= plateau_threshold:
            print(f"Plateau detected after {plateau_count} iterations. Stopping...")
            plateau_count = 0
            candidate_text  = divide_into_groups(best_text)
            break

    #return best_text
    return ' '.join(best_text[i:i+6] for i in range(0, len(best_text), 6))

with open("cipher.txt", "r") as f:
    cipher_text = f.read()

group_size = 6
iterations = 1000
start_time = time.time()  
decrypted_text = monte_carlo_decrypt(cipher_text, iterations, 1000, group_size)
end_time = time.time() 

print("Decrypted Text:", decrypted_text)
print("Time taken (seconds):", end_time - start_time)
